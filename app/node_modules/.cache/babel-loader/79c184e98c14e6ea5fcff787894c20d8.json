{"ast":null,"code":"//\n// const {\n//     BrowserRouter: Router,\n//     Route,\n//     Link,\n//     Redirect,\n//     withRouter\n// } = ReactRouterDOM\n//\n// const fakeAuth = {\n//     isAuthenticated: false,\n//     authenticate(callback) {\n//         this.isAuthenticated = true\n//         setTimeout(callback, 100) // fake async\n//     },\n//     signout(callback) {\n//         this.isAuthenticated = false\n//         setTimeout(callback, 100) // fake async\n//     }\n// }\n//\n// const Public = () => <h3>Public</h3>\n// const Protected = () => <h3>Protected</h3>\n//\n// class Login extends React.Component {\n//     state = {\n//         redirectToReferer: false\n//     }\n//\n//     login = () => {\n//         fakeAuth.authenticate(() => {\n//             this.setState(() => ({\n//                 redirectToReferer: true\n//             }))\n//         })\n//     }\n//\n//     render() {\n//         const { from } = this.props.location.state || { from: { pathname: '/' } }\n//         const { redirectToReferer } = this.state\n//\n//         if (redirectToReferer === true) {\n//             return <Redirect to={from} />\n//         }\n//\n//         return (\n//             <div>\n//                 <p>You must login to view the page</p>\n//                 <button onClick={this.login}>Login</button>\n//             </div>\n//         )\n//     }\n// }\n//\n// const PrivateRoute = ({ component: Component, ...rest }) => (\n//     <Route {...rest} render={(props) => (\n//         fakeAuth.isAuthenticated === true\n//             ? <Component {...props} />\n//             : <Redirect to={{\n//                 pathname: '/login',\n//                 state: { from: props.location }\n//             }} />\n//     )} />\n// )\n//\n// const AuthButton = withRouter(({ history }) => (\n//     fakeAuth.isAuthenticated ? (\n//         <p>\n//             Welcome! {' '}\n//             <button onClick={() => {\n//                 fakeAuth.signout(() => history.push('/'))\n//             }}>\n//                 Sign out\n//             </button>\n//         </p>\n//     ) : (\n//         <p>You are not logged in.</p>\n//     )\n// ))\n//\n// const App = () => (\n//     <Router>\n//         <div>\n//             <AuthButton />\n//\n//             <ul>\n//                 <li><Link to=\"/public\">Public Page</Link></li>\n//                 <li><Link to=\"/protected\">Protected Page</Link></li>\n//             </ul>\n//\n//             <hr />\n//\n//             <Route path=\"/public\" component={Public} />\n//             <Route path=\"/login\" component={Login} />\n//             <PrivateRoute path=\"/protected\" component={Protected} />\n//         </div>\n//     </Router>\n// )\n//\n//\n// export default App","map":{"version":3,"sources":["C:/Users/patri/Desktop/Projekty/TasteIT/app/src/About.js"],"names":[],"mappingssourcesContent":["//\r\n// const {\r\n//     BrowserRouter: Router,\r\n//     Route,\r\n//     Link,\r\n//     Redirect,\r\n//     withRouter\r\n// } = ReactRouterDOM\r\n//\r\n// const fakeAuth = {\r\n//     isAuthenticated: false,\r\n//     authenticate(callback) {\r\n//         this.isAuthenticated = true\r\n//         setTimeout(callback, 100) // fake async\r\n//     },\r\n//     signout(callback) {\r\n//         this.isAuthenticated = false\r\n//         setTimeout(callback, 100) // fake async\r\n//     }\r\n// }\r\n//\r\n// const Public = () => <h3>Public</h3>\r\n// const Protected = () => <h3>Protected</h3>\r\n//\r\n// class Login extends React.Component {\r\n//     state = {\r\n//         redirectToReferer: false\r\n//     }\r\n//\r\n//     login = () => {\r\n//         fakeAuth.authenticate(() => {\r\n//             this.setState(() => ({\r\n//                 redirectToReferer: true\r\n//             }))\r\n//         })\r\n//     }\r\n//\r\n//     render() {\r\n//         const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n//         const { redirectToReferer } = this.state\r\n//\r\n//         if (redirectToReferer === true) {\r\n//             return <Redirect to={from} />\r\n//         }\r\n//\r\n//         return (\r\n//             <div>\r\n//                 <p>You must login to view the page</p>\r\n//                 <button onClick={this.login}>Login</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n//\r\n// const PrivateRoute = ({ component: Component, ...rest }) => (\r\n//     <Route {...rest} render={(props) => (\r\n//         fakeAuth.isAuthenticated === true\r\n//             ? <Component {...props} />\r\n//             : <Redirect to={{\r\n//                 pathname: '/login',\r\n//                 state: { from: props.location }\r\n//             }} />\r\n//     )} />\r\n// )\r\n//\r\n// const AuthButton = withRouter(({ history }) => (\r\n//     fakeAuth.isAuthenticated ? (\r\n//         <p>\r\n//             Welcome! {' '}\r\n//             <button onClick={() => {\r\n//                 fakeAuth.signout(() => history.push('/'))\r\n//             }}>\r\n//                 Sign out\r\n//             </button>\r\n//         </p>\r\n//     ) : (\r\n//         <p>You are not logged in.</p>\r\n//     )\r\n// ))\r\n//\r\n// const App = () => (\r\n//     <Router>\r\n//         <div>\r\n//             <AuthButton />\r\n//\r\n//             <ul>\r\n//                 <li><Link to=\"/public\">Public Page</Link></li>\r\n//                 <li><Link to=\"/protected\">Protected Page</Link></li>\r\n//             </ul>\r\n//\r\n//             <hr />\r\n//\r\n//             <Route path=\"/public\" component={Public} />\r\n//             <Route path=\"/login\" component={Login} />\r\n//             <PrivateRoute path=\"/protected\" component={Protected} />\r\n//         </div>\r\n//     </Router>\r\n// )\r\n//\r\n//\r\n// export default App\r\n"]},"metadata":{},"sourceType":"module"}