{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Projekty\\\\TasteIT\\\\app\\\\src\\\\components\\\\RecipesList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport mealsData from \"../mealsData\";\nconst filters = [{\n  name: \"Meat\",\n  status: false\n}, {\n  name: \"Vegetarian\",\n  status: false\n}, {\n  name: \"Other\",\n  status: false\n}];\n\nconst Filters = ({\n  onClickAll,\n  all,\n  onClick,\n  filters\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  onClick: onClickAll,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"input\", {\n  type: \"checkbox\",\n  checked: all,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"label\", {\n  htmlFor: \"all\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }\n}, \"All\")), filters.map((filter, i) => /*#__PURE__*/React.createElement(\"li\", {\n  key: i,\n  \"data-index\": i,\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(\"input\", {\n  type: \"checkbox\",\n  id: filter.name,\n  checked: filter.status,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }\n}), /*#__PURE__*/React.createElement(\"label\", {\n  htmlFor: filter.name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }\n}, filter.name)))));\n\nconst Cards = ({\n  mealsData\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"comp__recipesList\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, mealsData.map((img, i) => /*#__PURE__*/React.createElement(Link, {\n  to: '/recipe/' + img.strCategory,\n  className: \"comp__recipe\",\n  style: {\n    backgroundImage: `url(${img.strCategoryThumb})`\n  },\n  key: i,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }\n}, img.strCategory))));\n\nclass RecipesList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mealsData: [],\n      filters,\n      all: true\n    };\n\n    this.setFilter = e => {\n      e.preventDefault();\n      const {\n        filters,\n        all\n      } = this.state;\n      const {\n        index\n      } = e.currentTarget.dataset;\n      filters[index].status = !filters[index].status;\n      this.setState({\n        filters\n      });\n      this.updateFilters();\n      this.updateImgs();\n    };\n\n    this.setAll = () => {\n      const {\n        filters\n      } = this.state;\n      filters.forEach(filter => {\n        filter.status = false;\n      });\n      this.setState({\n        all: true,\n        filters\n      });\n    };\n  }\n\n  updateFilters() {\n    const allFiltersTrue = filters.every(filter => filter.status === true);\n    const allFiltersFalse = filters.every(filter => filter.status === false);\n\n    if (allFiltersTrue || allFiltersFalse) {\n      this.setAll();\n    } else {\n      this.setState({\n        all: false\n      });\n    }\n  }\n\n  updateImgs() {\n    const {\n      filters,\n      all\n    } = this.state;\n    let newImgs = [];\n    let a = 0;\n    mealsData.forEach((img, imgKey) => {\n      filters.forEach((filter, filterKey) => {\n        if (img.strType == filter.name && filter.status == true) {\n          newImgs[a] = img;\n          a++;\n        }\n      });\n    });\n    this.setState({\n      mealsData: newImgs\n    });\n  }\n\n  render() {\n    const {\n      filters,\n      all\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comp__filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Filters, {\n      onClickAll: this.setAll,\n      all: all,\n      onClick: this.setFilter,\n      filters: filters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), all ? /*#__PURE__*/React.createElement(Cards, {\n      mealsData: mealsData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Cards, {\n      mealsData: this.state.mealsData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default RecipesList;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Projekty/TasteIT/app/src/components/RecipesList.js"],"names":["React","useState","useEffect","Link","mealsData","filters","name","status","Filters","onClickAll","all","onClick","map","filter","i","Cards","img","strCategory","backgroundImage","strCategoryThumb","RecipesList","Component","state","setFilter","e","preventDefault","index","currentTarget","dataset","setState","updateFilters","updateImgs","setAll","forEach","allFiltersTrue","every","allFiltersFalse","newImgs","a","imgKey","filterKey","strType","render"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport mealsData from \"../mealsData\";\r\n\r\nconst filters = [\r\n    {name:\"Meat\", status: false},\r\n    {name:\"Vegetarian\", status: false},\r\n    {name:\"Other\", status: false},\r\n];\r\n\r\nconst Filters = ({onClickAll, all, onClick, filters}) =>\r\n    <form>\r\n        <ul>\r\n            <li onClick={onClickAll}>\r\n                <input type=\"checkbox\" checked={all}/>\r\n                <label htmlFor=\"all\">All</label>\r\n            </li>\r\n            {filters.map(\r\n                (filter, i) =>\r\n                    <li key={i} data-index={i} onClick={onClick}>\r\n                        <input type=\"checkbox\" id={filter.name} checked={filter.status}/>\r\n                        <label htmlFor={filter.name}>{filter.name}</label>\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    </form>\r\n\r\nconst Cards = ({mealsData}) =>\r\n    <div className=\"comp__recipesList\">\r\n        {mealsData.map(\r\n            (img, i)=>\r\n                    <Link\r\n                        to={'/recipe/' + img.strCategory}\r\n                        className=\"comp__recipe\"\r\n                        style={{backgroundImage: `url(${img.strCategoryThumb})`}}\r\n                        key={i}\r\n                    >\r\n                        <div className=\"title\">\r\n                            {img.strCategory}\r\n                        </div>\r\n                    </Link>\r\n                )}\r\n    </div>\r\n\r\nclass RecipesList extends React.Component {\r\n\r\n        state = {\r\n            mealsData: [],\r\n            filters,\r\n            all: true\r\n        };\r\n\r\n    setFilter = (e) =>{\r\n        e.preventDefault();\r\n        const { filters, all } = this.state;\r\n        const { index } = e.currentTarget.dataset;\r\n\r\n        filters[index].status = !filters[index].status;\r\n        this.setState({\r\n            filters\r\n        });\r\n\r\n        this.updateFilters();\r\n        this.updateImgs();\r\n    }\r\n\r\n    setAll = () =>{\r\n        const {filters} = this.state;\r\n\r\n        filters.forEach(\r\n            filter => {\r\n                filter.status = false;\r\n            }\r\n        );\r\n\r\n        this.setState({\r\n            all: true,\r\n            filters\r\n        });\r\n    }\r\n\r\n    updateFilters(){\r\n        const allFiltersTrue = filters.every( filter => filter.status === true);\r\n        const allFiltersFalse = filters.every( filter => filter.status === false);\r\n\r\n        if(allFiltersTrue||allFiltersFalse){\r\n            this.setAll();\r\n        }else{\r\n            this.setState({\r\n                all: false\r\n            });\r\n        }\r\n    }\r\n\r\n    updateImgs() {\r\n        const { filters, all } = this.state;\r\n        let newImgs = [];\r\n        let a = 0;\r\n\r\n        mealsData.forEach((img, imgKey) => {\r\n            filters.forEach((filter, filterKey)=> {\r\n                if((img.strType==filter.name)&&(filter.status==true)){\r\n                    newImgs[a] = img;\r\n                    a++;\r\n                }\r\n            })\r\n        });\r\n\r\n        this.setState({\r\n            mealsData: newImgs\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {filters, all} = this.state;\r\n        return (\r\n            <div className=\"comp__filter\">\r\n                <Filters\r\n                    onClickAll={this.setAll}\r\n                    all={all}\r\n                    onClick={this.setFilter}\r\n                    filters={filters} />\r\n                {(all)?(\r\n                    <Cards mealsData = {mealsData}/>\r\n                ):(\r\n                    <Cards mealsData = {this.state.mealsData}/>\r\n                )}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipesList;"]},"metadata":{},"sourceType":"module"}